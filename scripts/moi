#!/usr/bin/env python

from uuid import UUID
from pprint import pformat

import click
import dateutil.parser

from moi import r_client
from moi.group import Group


def _is_uuid(test):
    """Return True if test is a UUID, False otherwise"""
    try:
        UUID(test)
    except ValueError:
        return False
    else:
        return True


@click.group()
def moi():
    pass


@moi.command()
def users():
    """Get the known users and their IDs"""
    if not r_client.exists('user-id-map'):
        click.echo("No user-id-map found, is the Redis database ID correct?")
        click.exit(1)

    user_map = r_client.hgetall('user-id-map')

    for id_ in sorted(user_map):
        if not _is_uuid(id_):
            click.echo("%s : %s" % (id_, user_map[id_]))

@moi.command()
@click.option('--user', help='A username', required=True)
def userjobs(user):
    """Get all jobs associated with a user"""
    grp = Group(user)

    nodes = []
    for node in grp.traverse():
        node['date_created'] = dateutil.parser.parse(node['date_created'])

    for node in sorted(nodes, key=lambda x: x['date_created']):
        click.echo("********** %s **********" % node['id'])
        click.echo(pformat(node))
        click.echo()

if __name__ == '__main__':
    moi()
